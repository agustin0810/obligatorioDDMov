{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport DatabaseConnection from \"../../database/database-connection\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar AddReplacement = function AddReplacement(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amount = _useState4[0],\n      setAmount = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      treatmentId = _useState6[0],\n      setTreatmentId = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      treatments = _useState8[0],\n      setTreatments = _useState8[1];\n\n  useEffect(function () {\n    db.transaction(function (txn) {\n      txn.executeSql(\"SELECT * FROM treatments\", [], function (tx, results) {\n        if (results.rows.length > 0) {\n          var temp = [];\n\n          for (var i = 0; i < results.rows.length; ++i) {\n            temp.push(results.rows.item(i));\n          }\n\n          setTreatments(temp);\n        } else {\n          Alert.alert(\"Mensaje\", \"No hay tratamientos\", [{\n            text: \"Ok\"\n          }], {\n            cancelable: false\n          });\n        }\n      });\n    });\n  }, []);\n\n  var submitSupply = function submitSupply() {\n    if (checkFields() == true) {\n      db.transaction(function (tx) {\n        tx.executeSql(\"INSERT INTO replacements (name, amount, treatmentId) VALUES (?, ?, ?)\", [name, amount, treatmentId], function (tx, results) {\n          console.log(\"results\", results);\n\n          if (results.rowsAffected > 0) {\n            Alert.alert(\"Exito\", \"Repuesto registrado.\", [{\n              text: \"Ok\"\n            }], {\n              cancelable: false\n            });\n          } else {\n            Alert.alert(\"Error al registrar repuesto\");\n          }\n        });\n      });\n    }\n  };\n\n  var checkFields = function checkFields() {\n    if (name != '' && amount != 0 && treatmentId != 0) {\n      Alert.alert(!isNaN(amount));\n\n      if (!isNaN(amount)) {\n        return true;\n      }\n\n      Alert.alert('Debe ingresar una cantidad en números');\n      return false;\n    }\n\n    Alert.alert('Debe ingresar todos los campos y seleccionar tratamiento.');\n    return false;\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.viewContainer,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setName,\n        editable: true,\n        maxLength: 50,\n        placeholder: \"Nombre\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: setAmount,\n        editable: true,\n        maxLength: 10,\n        placeholder: \"Cantidad\"\n      }), _jsx(SelectDropdown, {\n        buttonStyle: styles.dropdown,\n        defaultButtonText: \"Seleccione el tratamiento\",\n        data: treatments,\n        onSelect: function onSelect(selectedItem, index) {\n          console.log(selectedItem, index);\n        },\n        buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n          setTreatmentId(selectedItem.id);\n          return selectedItem.id + \", \" + selectedItem.name + \", \" + selectedItem.carCode + \", \" + selectedItem.costoTratamiento;\n        },\n        rowTextForSelection: function rowTextForSelection(item, index) {\n          return item.id + \", \" + item.name + \", \" + item.carCode + \", \" + item.costoTratamiento;\n        }\n      }), _jsx(TouchableOpacity, {\n        style: [styles.submitButton],\n        onPress: submitSupply,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Agregar\"\n        })\n      })]\n    })\n  });\n};\n\nexport default AddReplacement;\nvar styles = StyleSheet.create({\n  container: {},\n  viewContainer: {\n    padding: 30\n  },\n  textInput: {\n    borderColor: \"#142492\",\n    borderWidth: 4,\n    borderRadius: 5,\n    width: 300,\n    padding: 7,\n    color: \"#142492\",\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 30\n  },\n  submitButton: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 200,\n    backgroundColor: 'green',\n    textAlign: 'center',\n    padding: 10,\n    borderRadius: 5\n  },\n  text: {\n    color: 'white',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: 55,\n    fontSize: 15\n  },\n  dropdown: {\n    marginRight: 60,\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","DatabaseConnection","useFocusEffect","SelectDropdown","db","getConnection","AddReplacement","navigation","name","setName","amount","setAmount","treatmentId","setTreatmentId","treatments","setTreatments","transaction","txn","executeSql","tx","results","rows","length","temp","i","push","item","Alert","alert","text","cancelable","submitSupply","checkFields","console","log","rowsAffected","isNaN","styles","container","viewContainer","textInput","dropdown","selectedItem","index","id","carCode","costoTratamiento","submitButton","StyleSheet","create","padding","borderColor","borderWidth","borderRadius","width","color","marginLeft","marginRight","marginBottom","backgroundColor","textAlign","fontSize"],"sources":["C:/Users/agust/Desktop/OBLIGATORIO DD MOVILES - Leandro Miranda y Agustin Maciel/local/src/screens/Replacement/AddReplacement.js"],"sourcesContent":["import { StyleSheet, TextInput, View, SafeAreaView, Text, Alert, TouchableOpacity } from 'react-native'\r\nimport React, {useState, useEffect} from 'react'\r\nimport DatabaseConnection from \"../../database/database-connection\";\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport SelectDropdown from 'react-native-select-dropdown'\r\n\r\nconst db = DatabaseConnection.getConnection();\r\n\r\nconst AddReplacement = ({ navigation }) => {\r\n  const [name, setName] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const [treatmentId, setTreatmentId] = useState(0);\r\n  const [treatments, setTreatments] = useState([]);\r\n\r\n  //Listamos los tratamientos para permitir asignar el repuesto\r\n  useEffect(() => {\r\n\r\n    db.transaction( (txn) => {\r\n      \r\n      txn.executeSql(`SELECT * FROM treatments`, [], (tx, results) => {\r\n        // validar resultado\r\n        if (results.rows.length > 0) {\r\n          var temp = [];\r\n          for (let i = 0; i < results.rows.length; ++i)\r\n            //Alert.alert(\"paso \" +results.rows.item(i).name)\r\n            temp.push(results.rows.item(i));\r\n          setTreatments(temp);\r\n        } else {\r\n          Alert.alert(\r\n            \"Mensaje\",\r\n            \"No hay tratamientos\",\r\n            [\r\n              {\r\n                text: \"Ok\",\r\n              },\r\n            ],\r\n            { cancelable: false }\r\n          );\r\n        }\r\n      });\r\n\r\n    });\r\n  }, []);\r\n\r\n  //función para hacer el submit desde el botón\r\n  const submitSupply = () =>{\r\n          // guardar los datos\r\n        if(checkFields()==true){\r\n          db.transaction((tx) => {\r\n\r\n            tx.executeSql(\r\n              `INSERT INTO replacements (name, amount, treatmentId) VALUES (?, ?, ?)`,\r\n              [name, amount, treatmentId],\r\n              (tx, results) => {\r\n                console.log(\"results\", results);\r\n                // validar resultado\r\n                if (results.rowsAffected > 0) {\r\n                              \r\n                  Alert.alert(\r\n                    \"Exito\",\r\n                    \"Repuesto registrado.\",\r\n                    [\r\n                      {\r\n                        text: \"Ok\",\r\n                      },\r\n                    ],\r\n                    { cancelable: false }\r\n                  );\r\n                } else {\r\n                  Alert.alert(\"Error al registrar repuesto\");\r\n                }\r\n              }\r\n            );\r\n          });\r\n        }\r\n\r\n  }\r\n\r\n  const checkFields = () =>{\r\n    if(name!='' && amount!=0 && treatmentId!=0){\r\n      Alert.alert(!isNaN(amount))\r\n      if(!isNaN(amount)){\r\n        return true;\r\n      }\r\n        \r\n      \r\n      Alert.alert('Debe ingresar una cantidad en números')\r\n      return false\r\n    }\r\n    Alert.alert('Debe ingresar todos los campos y seleccionar tratamiento.')\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.viewContainer}>\r\n          <TextInput style={styles.textInput} onChangeText={setName} editable maxLength={50} placeholder=\"Nombre\" />\r\n          <TextInput style={styles.textInput} onChangeText={setAmount} editable maxLength={10} placeholder=\"Cantidad\" />\r\n          <SelectDropdown buttonStyle={styles.dropdown} defaultButtonText='Seleccione el tratamiento'\r\n\t          data={treatments}\r\n\t          onSelect={(selectedItem, index) => {\r\n\t\t        console.log(selectedItem, index)\r\n\t          }}\r\n\t          buttonTextAfterSelection={(selectedItem, index) => {\r\n\t\t        // text represented after item is selected\r\n\t\t        // if data array is an array of objects then return selectedItem.property to render after item is selected\r\n\t\t        setTreatmentId(selectedItem.id)\r\n            return selectedItem.id + \", \"+selectedItem.name + \", \" +selectedItem.carCode + \", \" +selectedItem.costoTratamiento\r\n\t          }}\r\n\t          rowTextForSelection={(item, index) => {\r\n              // text represented for each item in dropdown\r\n              // if data array is an array of objects then return item.property to represent item in dropdown\r\n              return item.id + \", \"+item.name + \", \" +item.carCode + \", \" +item.costoTratamiento\r\n            }}\r\n            />\r\n          <TouchableOpacity style={[styles.submitButton]} onPress={submitSupply}>\r\n            <Text style={styles.text}>Agregar</Text>\r\n          </TouchableOpacity>\r\n        \r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default AddReplacement\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n\r\n  },\r\n  viewContainer: {\r\n    padding: 30\r\n  },\r\n  textInput: {\r\n    borderColor: \"#142492\",\r\n    borderWidth: 4,\r\n    borderRadius: 5,\r\n    width: 300,\r\n    padding: 7,\r\n    color: \"#142492\",\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginBottom: 30\r\n  },\r\n  submitButton: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: 200,\r\n    backgroundColor: 'green',\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    \r\n  },\r\n  text: {\r\n    color: 'white',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: 55,\r\n    fontSize: 15\r\n  },\r\n  dropdown: {\r\n    marginRight: 60,\r\n    marginBottom: 20,\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}