{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MyInputText from \"../components/MyInputText\";\nimport MySingleButton from \"../components/MySingleButton\";\nimport DatabaseConnection from \"../database/database-connection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar RegisterUser = function RegisterUser(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var registerUser = function registerUser() {\n    console.log(\"states\", userName, password, email);\n\n    if (!userName) {\n      Alert.alert('Ingrese su nombre de usuario');\n      return;\n    }\n\n    if (!password) {\n      Alert.alert('Ingrese su contraseña');\n      return;\n    }\n\n    if (!email) {\n      Alert.alert('Ingrese su email');\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql(\"INSERT INTO users (user_name, password, email) VALUES (?, ?, ?)\", [userName, password, email], function (tx, results) {\n        console.log('results', results);\n\n        if (results.rowsAffected > 0) {\n          Alert.alert('Usuario registrado');\n          navigation.navigate('HomeScreen');\n        }\n      });\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.viewContainer,\n      children: _jsx(View, {\n        style: styles.generalView,\n        children: _jsx(ScrollView, {\n          children: _jsxs(KeyboardAvoidingView, {\n            style: styles.keyboardView,\n            children: [_jsx(MyInputText, {\n              placeholder: \"Nombre de Usuario\",\n              onChangeText: function onChangeText(text) {\n                return setUserName(text);\n              },\n              style: styles.nameInput\n            }), _jsx(MyInputText, {\n              placeholder: \"Contrase\\xF1a\",\n              minLength: 8,\n              maxLength: 16,\n              onChangeText: function onChangeText(text) {\n                return setPassword(text);\n              },\n              style: styles.passwordInput\n            }), _jsx(MyInputText, {\n              placeholder: \"Correo Electronico\",\n              keyboardType: \"email-address\",\n              onChangeText: function onChangeText(text) {\n                return setEmail(text);\n              },\n              style: styles.emailInput\n            }), _jsx(MySingleButton, {\n              title: \"Guardar Usuario\",\n              customPress: registerUser\n            })]\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default RegisterUser;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  viewContainer: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  generalView: {\n    flex: 1\n  },\n  keyboardView: {\n    flex: 1,\n    justifyContent: \"space-between\"\n  },\n  nameInput: {\n    padding: 15,\n    textAlignVertical: \"top\"\n  },\n  passwordInput: {\n    padding: 15,\n    textAlignVertical: \"top\"\n  },\n  emailInput: {\n    padding: 15,\n    textAlignVertical: \"top\"\n  }\n});","map":{"version":3,"sources":["/Users/sebastianbarcelona/Desktop/CTC/crud_usuarios/src/screens/RegisterUser.js"],"names":["React","useState","MyInputText","MySingleButton","DatabaseConnection","db","getConnection","RegisterUser","navigation","userName","setUserName","password","setPassword","email","setEmail","registerUser","console","log","Alert","alert","transaction","tx","executeSql","results","rowsAffected","navigate","styles","container","viewContainer","generalView","keyboardView","text","nameInput","passwordInput","emailInput","StyleSheet","create","flex","backgroundColor","justifyContent","padding","textAlignVertical"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { StyleSheet, View, SafeAreaView, ScrollView, KeyboardAvoidingView, Alert } from 'react-native'\n\nimport MyInputText from '../components/MyInputText';\nimport MySingleButton from '../components/MySingleButton';\n\nimport DatabaseConnection from \"../database/database-connection\";\nconst db = DatabaseConnection.getConnection();\n\nconst RegisterUser = ({ navigation }) => {\n  let [userName, setUserName] = useState('');\n  let [password, setPassword] = useState('');\n  let [email, setEmail] = useState('');\n\n  const registerUser = () => {\n    console.log(\"states\", userName, password, email);\n    // validaciones estados\n    if(!userName) {\n      Alert.alert('Ingrese su nombre de usuario');\n      return;\n    }\n\n    if(!password) {\n      Alert.alert('Ingrese su contraseña');\n      return;\n    }\n\n    if(!email) {\n      Alert.alert('Ingrese su email');\n      return;\n    }\n\n    // guardar los datos\n    db.transaction(tx => {\n      tx.executeSql(\n        `INSERT INTO users (user_name, password, email) VALUES (?, ?, ?)`,\n        [userName, password, email], (tx, results) => {\n          console.log('results', results);\n          // validar resultado\n          if(results.rowsAffected > 0){\n            Alert.alert('Usuario registrado');\n            navigation.navigate('HomeScreen');\n          }\n        }\n      )\n    })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n        <View style={styles.viewContainer}>\n          <View style={styles.generalView}>\n            <ScrollView>\n              <KeyboardAvoidingView style={styles.keyboardView}>\n                <MyInputText\n                  placeholder=\"Nombre de Usuario\"\n                  onChangeText={(text) => setUserName(text)}\n                  style={styles.nameInput}\n                />\n\n                <MyInputText\n                  placeholder=\"Contraseña\"\n                  minLength={8}\n                  maxLength={16}\n                  onChangeText= {(text) => setPassword(text)}\n                  style={styles.passwordInput}\n                />\n\n                <MyInputText \n                  placeholder=\"Correo Electronico\"\n                  keyboardType=\"email-address\"\n                  onChangeText= {(text) => setEmail(text)}\n                  style={styles.emailInput}\n                />\n\n                <MySingleButton title=\"Guardar Usuario\" customPress={registerUser}/>\n              </KeyboardAvoidingView>\n            </ScrollView>\n          </View>\n        </View>\n    </SafeAreaView>\n  )\n}\n\nexport default RegisterUser\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  viewContainer: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  generalView: {\n    flex: 1,\n  },\n  keyboardView: {\n    flex: 1,\n    justifyContent: \"space-between\",\n  },\n  nameInput: {\n    padding: 15,\n    textAlignVertical: \"top\"\n  },\n  passwordInput: {\n    padding: 15,\n    textAlignVertical: \"top\"\n  },\n  emailInput: {\n    padding: 15,\n    textAlignVertical: \"top\"\n  }\n})"]},"metadata":{},"sourceType":"module"}