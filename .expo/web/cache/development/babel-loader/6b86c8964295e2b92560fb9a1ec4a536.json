{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MyText from \"../components/MyText\";\nimport MyInputText from \"../components/MyInputText\";\nimport MySingleButton from \"../components/MySingleButton\";\nimport DatabaseConnection from \"../database/database-connection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = DatabaseConnection.getConnection();\n\nvar ViewUser = function ViewUser() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var getUserData = function getUserData() {\n    console.log(\"getUserData\");\n    setUserData({});\n\n    if (!userName) {\n      Alert.alert(\"El nombre de usuario es requerido\");\n      return;\n    }\n\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT * FROM users WHERE user_name = ?\", [userName], function (tx, results) {\n        console.log(\"results\", results);\n\n        if (results.rows.length > 0) {\n          setUserData(results.rows.item(0));\n        } else {\n          Alert.alert(\"El usuario no existe\");\n        }\n      });\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.viewContainer,\n      children: _jsxs(View, {\n        style: styles.generalView,\n        children: [_jsx(MyText, {\n          style: styles.inputStyle,\n          children: \"Filtro de usuario\"\n        }), _jsx(MyInputText, {\n          style: styles.inputStyle,\n          placeholder: \"Nombre de usuario\",\n          onChangeText: function onChangeText(text) {\n            return setUserName(text);\n          }\n        }), _jsx(MySingleButton, {\n          title: \"Buscar\",\n          customPress: getUserData\n        }), _jsxs(View, {\n          style: styles.presenterView,\n          children: [_jsxs(MyText, {\n            children: [\"Nombre de Usuario : \", userData.userName, \" \"]\n          }), _jsxs(MyText, {\n            children: [\"Email: \", userData.email, \" \"]\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default ViewUser;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  viewContainer: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  generalView: {\n    flex: 1\n  },\n  inputStyle: {\n    padding: 15\n  },\n  presenterView: {\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 15\n  }\n});","map":{"version":3,"sources":["/Users/sebastianbarcelona/Desktop/CTC/crud_usuarios/src/screens/ViewUser.js"],"names":["React","useState","MyText","MyInputText","MySingleButton","DatabaseConnection","db","getConnection","ViewUser","userName","setUserName","userData","setUserData","getUserData","console","log","Alert","alert","transaction","tx","executeSql","results","rows","length","item","styles","container","viewContainer","generalView","inputStyle","text","presenterView","email","StyleSheet","create","flex","backgroundColor","padding","marginLeft","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, SafeAreaView, Alert } from \"react-native\";\nimport MyText from \"../components/MyText\";\nimport MyInputText from \"../components/MyInputText\";\nimport MySingleButton from \"../components/MySingleButton\";\n\nimport DatabaseConnection from \"../database/database-connection\";\nconst db = DatabaseConnection.getConnection();\n\nconst ViewUser = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [userData, setUserData] = useState({});\n\n  // generar funcion para obtener datos del usuario\n  const getUserData = () => {\n    console.log(\"getUserData\");\n    setUserData({});\n\n    if(!userName) {\n      Alert.alert(\"El nombre de usuario es requerido\");\n      return;\n    }\n\n    db.transaction((tx) => {\n      tx.executeSql(\n        `SELECT * FROM users WHERE user_name = ?`,\n        [userName],\n        (tx, results) => {\n          console.log(\"results\", results);\n          // validar resultado\n          if (results.rows.length > 0) {\n            setUserData(results.rows.item(0));\n          } else {\n            Alert.alert(\"El usuario no existe\");\n          }\n        }\n      );\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.viewContainer}>\n        <View style={styles.generalView}>\n          <MyText style={styles.inputStyle}>Filtro de usuario</MyText>\n          <MyInputText\n            style={styles.inputStyle}\n            placeholder=\"Nombre de usuario\"\n            onChangeText={(text) => setUserName(text)}\n          />\n          <MySingleButton title=\"Buscar\" customPress={getUserData} />\n          <View style={styles.presenterView}>\n            <MyText>Nombre de Usuario : {userData.userName} </MyText>\n            <MyText>Email: {userData.email} </MyText>\n          </View>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default ViewUser;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  viewContainer: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  generalView: {\n    flex: 1,\n  },\n  inputStyle: {\n    padding: 15,\n  },\n  presenterView: {\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}